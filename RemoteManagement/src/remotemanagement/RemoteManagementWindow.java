package remotemanagement;

import com.remotemanagement.dbContext.ContextHistory;
import com.remotemanagement.dbContext.SqlDaoCreditentialsFromHistory;
import com.remotemanagement.dbContext.XML2Obj;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.sql.DriverManager;
import org.grep4j.core.command.linux.StackSessionPool;
import org.grep4j.core.model.ServerDetails;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author cooper
 */
public class RemoteManagementWindow extends javax.swing.JFrame {

    private ContextHistory dbContext;
    private Connection conn;
    private PreparedStatement ps;
    private ResultSet rs;
    private static ContextHistory contextHistory;
    private SqlDaoCreditentialsFromHistory myHistory = new SqlDaoCreditentialsFromHistory();
    public static ServerDetails remoteConnectionDetails;

    /**
     * Creates new form RemoteManagementWindow
     */
    public RemoteManagementWindow() {
        initComponents();
        myInitComponents();
    }

    private void myInitComponents() {

        startAgentBtn.setVisible(false);
        stopAgentBtn.setVisible(false);
        tailBtn.setVisible(false);
        reloadBtn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etchedBorder1 = (javax.swing.border.EtchedBorder)javax.swing.BorderFactory.createEtchedBorder();
        creditentialsDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userNameFl = new javax.swing.JTextField();
        passwordFl = new javax.swing.JPasswordField();
        loginOkBtn = new javax.swing.JButton();
        loginCancelBtn = new javax.swing.JButton();
        hostFl = new javax.swing.JLabel();
        directoryFl = new javax.swing.JLabel();
        dbCreditentials = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dbUserNameFld = new javax.swing.JTextField();
        dbPasswordFld = new javax.swing.JPasswordField();
        dbUrlTextFld = new javax.swing.JTextField();
        saveContextHistBtn = new javax.swing.JButton();
        checkConnectionBtn = new javax.swing.JButton();
        closeContextBtn = new javax.swing.JButton();
        reloadBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        avaliableAgentsList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        agentNameLbl = new javax.swing.JLabel();
        startAgentBtn = new javax.swing.JButton();
        stopAgentBtn = new javax.swing.JButton();
        tailBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        creditentialsDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        creditentialsDialog.setTitle("User Creditentials");
        creditentialsDialog.setAlwaysOnTop(true);
        creditentialsDialog.setResizable(false);

        jLabel1.setText("User Name:");

        jLabel2.setText("Password:");

        userNameFl.setText("evam");
        userNameFl.setPreferredSize(new java.awt.Dimension(150, 22));

        passwordFl.setText("evam123");

        loginOkBtn.setText("OK");
        loginOkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginOkBtnActionPerformed(evt);
            }
        });

        loginCancelBtn.setText("Cancel");
        loginCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginCancelBtnActionPerformed(evt);
            }
        });

        hostFl.setEnabled(false);

        directoryFl.setEnabled(false);

        javax.swing.GroupLayout creditentialsDialogLayout = new javax.swing.GroupLayout(creditentialsDialog.getContentPane());
        creditentialsDialog.getContentPane().setLayout(creditentialsDialogLayout);
        creditentialsDialogLayout.setHorizontalGroup(
            creditentialsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditentialsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creditentialsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginOkBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(creditentialsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(creditentialsDialogLayout.createSequentialGroup()
                        .addComponent(hostFl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(directoryFl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginCancelBtn))
                    .addComponent(passwordFl)
                    .addComponent(userNameFl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        creditentialsDialogLayout.setVerticalGroup(
            creditentialsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditentialsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creditentialsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userNameFl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creditentialsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordFl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(creditentialsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginOkBtn)
                    .addComponent(loginCancelBtn)
                    .addComponent(hostFl)
                    .addComponent(directoryFl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        creditentialsDialog.getAccessibleContext().setAccessibleParent(this);

        dbCreditentials.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dbCreditentials.setTitle("DB Creditentials");
        dbCreditentials.setResizable(false);

        jLabel5.setText("DB URL :");

        jLabel6.setText("DB USER NAME:");

        jLabel7.setText("DB PASSWORD:");

        dbUserNameFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dbUserNameFldKeyPressed(evt);
            }
        });

        dbPasswordFld.setToolTipText(dbPasswordFld.getText());
        dbPasswordFld.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dbPasswordFldMouseEntered(evt);
            }
        });
        dbPasswordFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dbPasswordFldKeyPressed(evt);
            }
        });

        dbUrlTextFld.setText("jdbc:oracle:thin:@<HOSTNAME>:<PORT>:<DBNAME>");
        dbUrlTextFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dbUrlTextFldKeyPressed(evt);
            }
        });

        saveContextHistBtn.setText("Save");
        saveContextHistBtn.setEnabled(false);
        saveContextHistBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveContextHistBtnActionPerformed(evt);
            }
        });

        checkConnectionBtn.setText("Check Connection");
        checkConnectionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkConnectionBtnActionPerformed(evt);
            }
        });

        closeContextBtn.setText("Close");
        closeContextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeContextBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dbCreditentialsLayout = new javax.swing.GroupLayout(dbCreditentials.getContentPane());
        dbCreditentials.getContentPane().setLayout(dbCreditentialsLayout);
        dbCreditentialsLayout.setHorizontalGroup(
            dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbCreditentialsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dbCreditentialsLayout.createSequentialGroup()
                        .addGroup(dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(dbCreditentialsLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(dbPasswordFld))
                            .addGroup(dbCreditentialsLayout.createSequentialGroup()
                                .addGroup(dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dbUrlTextFld, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                                    .addComponent(dbUserNameFld))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dbCreditentialsLayout.createSequentialGroup()
                        .addComponent(checkConnectionBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveContextHistBtn)
                        .addGap(18, 18, 18)
                        .addComponent(closeContextBtn)))
                .addContainerGap())
        );
        dbCreditentialsLayout.setVerticalGroup(
            dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbCreditentialsLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dbUrlTextFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dbUserNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dbPasswordFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(dbCreditentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveContextHistBtn)
                    .addComponent(checkConnectionBtn)
                    .addComponent(closeContextBtn))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Remote Agent Management");
        setForeground(java.awt.Color.white);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        reloadBtn.setText("Reload Listener List");
        reloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadBtnActionPerformed(evt);
            }
        });

        jList1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        avaliableAgentsList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        avaliableAgentsList.setToolTipText("To check and operate the Agent click on the list.");
        avaliableAgentsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                avaliableAgentsListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(avaliableAgentsList);

        jLabel3.setText("Avaliable Hosts");

        jLabel4.setText("Avaliable Agents");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        startAgentBtn.setText("Start");
        startAgentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startAgentBtnActionPerformed(evt);
            }
        });

        stopAgentBtn.setText("Stop");
        stopAgentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopAgentBtnActionPerformed(evt);
            }
        });

        tailBtn.setText("Tail Last Logs");
        tailBtn.setPreferredSize(new java.awt.Dimension(59, 25));
        tailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tailBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(agentNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(startAgentBtn)
                .addGap(18, 18, 18)
                .addComponent(stopAgentBtn)
                .addGap(18, 18, 18)
                .addComponent(tailBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(agentNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(startAgentBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stopAgentBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tailBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(5, 5, 5))))
        );

        jMenu1.setText("File");

        jMenuItem3.setText("Change DB Creditentials");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Help");

        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(reloadBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(156, 156, 156))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reloadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(692, 468));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        About f = new About();
        try {
            f.setContentPane(new JLabel(new ImageIcon(ImageIO.read(new File("res/splash.jpg")))));
            f.add(f.jButton1);
            f.add(f.jTextField1);
        } catch (IOException e) {
        }
        f.pack();
        f.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void reloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadBtnActionPerformed
        try {
            LoadListenerHosts a = new LoadListenerHosts();
            jList1.setModel(a.LoadListenerHosts());
            reloadBtn.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No agent is running!", "Info", JOptionPane.INFORMATION_MESSAGE);
            reloadBtn.setVisible(true);
        }
    }//GEN-LAST:event_reloadBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        try {
            dbContext = ((ContextHistory) XML2Obj.xmlReadRoot(new ContextHistory(),
                    ".contextHistory"));
            if (dbContext.getLastContext() == null
                    || dbContext.getLastContext().length() == 0
                    || dbContext.getLastContext().isEmpty()) {
                JOptionPane.showMessageDialog(this, "There is no DB creditentials!", "Info", JOptionPane.INFORMATION_MESSAGE);
                dbCreditentials.pack();
                dbCreditentials.setResizable(false);
                dbCreditentials.setLocationRelativeTo(this);
                dbCreditentials.setVisible(true);
            } else {
                LoadListenerHosts a = new LoadListenerHosts();
                jList1.setModel(a.LoadListenerHosts());
                reloadBtn.setVisible(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No agent is running!", "Info", JOptionPane.INFORMATION_MESSAGE);
            reloadBtn.setVisible(true);
        }
    }//GEN-LAST:event_formWindowOpened

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged

        if (!evt.getValueIsAdjusting()) {
            hostFl.setText(jList1.getSelectedValue().toString().substring(0, jList1.getSelectedValue().toString().indexOf("-")));
            hostFl.setVisible(false);
            directoryFl.setText(jList1.getSelectedValue().toString().substring(jList1.getSelectedValue().toString().indexOf(">") + 1));
            directoryFl.setVisible(false);
            creditentialsDialog.pack();
            creditentialsDialog.setResizable(false);
            creditentialsDialog.setLocationRelativeTo(this);
            creditentialsDialog.setVisible(true);
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void loginCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginCancelBtnActionPerformed
        // TODO add your handling code here:
        creditentialsDialog.dispose();
        jList1.clearSelection();
    }//GEN-LAST:event_loginCancelBtnActionPerformed

    private void loginOkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginOkBtnActionPerformed
        // TODO add your handling code here:
        String array = null;
        RetreiveAllAgentsOnHost a = new RetreiveAllAgentsOnHost();
        ArrayList<String> array1 = new ArrayList<>();

        try {
            remoteConnectionDetails = new ServerDetails(hostFl.getText());
            remoteConnectionDetails.setUser(userNameFl.getText());
            remoteConnectionDetails.setPasswordRequired(true);
            remoteConnectionDetails.setPassword(passwordFl.getText());
            StackSessionPool.getInstance().startPool();
            array = a.LoginToRemoteHost(directoryFl.getText());
            String[] splittedArray = array.split(".properties");
            array1.addAll(Arrays.asList(splittedArray));
        } catch (Exception e) {
            creditentialsDialog.dispose();
            agentNameLbl.setVisible(false);
            startAgentBtn.setVisible(false);
            stopAgentBtn.setVisible(false);
            tailBtn.setVisible(false);
            JOptionPane.showMessageDialog(creditentialsDialog, "Login Failure", "Error", JOptionPane.ERROR_MESSAGE);
            avaliableAgentsList.setModel(new DefaultListModel());
            jList1.clearSelection();
            e.printStackTrace();

        }

        DefaultListModel<String> model = new DefaultListModel<>();
        try {
            for (String s : array1) {
                if (!s.toLowerCase().contains("agentlog") && !s.isEmpty() && !s.equals("\n")) {
                    model.addElement("Agent " + s.substring(18));
                }
            }
        } catch (Exception e) {
            creditentialsDialog.dispose();
            //JOptionPane.showMessageDialog(creditentialsDialog, "Error1", "Login Failure",JOptionPane.ERROR_MESSAGE);
            jList1.clearSelection();

        }
        try {
            SqlUtilsRemoteManagement df = new SqlUtilsRemoteManagement();
            df.SaveUserCreditentialstoDb(userNameFl.getText(), passwordFl.getText(), hostFl.getText(), directoryFl.getText());
        } catch (SQLException e) {
            creditentialsDialog.dispose();
            jList1.clearSelection();
        }
        avaliableAgentsList.setModel(model);
        creditentialsDialog.dispose();
    }//GEN-LAST:event_loginOkBtnActionPerformed

    private void avaliableAgentsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_avaliableAgentsListValueChanged
        // TODO add your handling code here:
        String response = null;
        String directory = jList1.getSelectedValue().toString().substring(jList1.getSelectedValue().toString().indexOf(">") + 1);
        String agentNo = avaliableAgentsList.getSelectedValue().toString().substring(6);
        if (!evt.getValueIsAdjusting()) {
            CheckListenerStatus aa = new CheckListenerStatus();
            try {
                response = aa.ListenerStatus(directory, agentNo);
            } catch (Exception ex) {
                Logger.getLogger(RemoteManagementWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (!agentNameLbl.isVisible()) {
                agentNameLbl.setVisible(true);
            }
            agentNameLbl.setText("<html>" + response + "</html>");
            if (response.toLowerCase().contains("not")) {
                startAgentBtn.setVisible(true);
                stopAgentBtn.setVisible(false);
                tailBtn.setVisible(true);
            } else {
                startAgentBtn.setVisible(false);
                stopAgentBtn.setVisible(true);
                tailBtn.setVisible(true);
            }
        }
    }//GEN-LAST:event_avaliableAgentsListValueChanged

    private void startAgentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startAgentBtnActionPerformed
        // TODO add your handling code here:
        String response = null;
        String agent = avaliableAgentsList.getSelectedValue().toString().substring(6);
        String directory = jList1.getSelectedValue().toString().substring(jList1.getSelectedValue().toString().indexOf(">") + 1);
        StartSelectedListener cc = new StartSelectedListener();
        try {
            response = cc.ListenerStatus(directory, agent);
        } catch (Exception ex) {
            Logger.getLogger(RemoteManagementWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        agentNameLbl.setText("Agent " + agent + " started");
        if (response.toLowerCase().contains(".ok") || response.toLowerCase().contains("running")) {
            startAgentBtn.setVisible(false);
            stopAgentBtn.setVisible(true);
            tailBtn.setVisible(true);
        }
    }//GEN-LAST:event_startAgentBtnActionPerformed

    private void stopAgentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopAgentBtnActionPerformed
        // TODO add your handling code here:
        String response = null;
        String agent = avaliableAgentsList.getSelectedValue().toString().substring(6);
        String directory = jList1.getSelectedValue().toString().substring(jList1.getSelectedValue().toString().indexOf(">") + 1);
        StopSelectedListener cc = new StopSelectedListener();
        try {
            response = cc.ListenerStatus(directory, agent);
        } catch (Exception ex) {
            Logger.getLogger(RemoteManagementWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        agentNameLbl.setText("Agent " + agent + " stopped");
        if (response.toLowerCase().contains(".ok")) {
            startAgentBtn.setVisible(true);
            stopAgentBtn.setVisible(false);
            tailBtn.setVisible(true);
        } else {

        }
    }//GEN-LAST:event_stopAgentBtnActionPerformed

    private void tailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tailBtnActionPerformed
        String agent = avaliableAgentsList.getSelectedValue().toString().substring(6);
        String directory = jList1.getSelectedValue().toString().substring(jList1.getSelectedValue().toString().indexOf(">") + 1);
        try {
            new TailFrame(directory, agent).setVisible(true);

        } catch (Exception ex) {
            Logger.getLogger(RemoteManagementWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tailBtnActionPerformed

    private void checkConnectionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkConnectionBtnActionPerformed
        // TODO add your handling code here:
        int dbResponse = -1;
        try {
            conn = DriverManager.getConnection(dbUrlTextFld.getText(), dbUserNameFld.getText(), dbPasswordFld.getText());
            ps = conn.prepareStatement("select 1 from dual");

            rs = ps.executeQuery();
            while (rs.next()) {
                dbResponse = rs.getInt(1);
            }
            if (dbResponse == 1) {
                saveContextHistBtn.setEnabled(true);
                JOptionPane.showMessageDialog(this, "DB Connection is OK.", "Info", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No DB Connection", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No DB Connection", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_checkConnectionBtnActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

//        dbUrlTextFld.setText(myHistory.dbCreditentialsMap.get("dbUrl"));
//        dbUserNameFld.setText(myHistory.dbCreditentialsMap.get("dbUser"));
//        dbPasswordFld.setText(myHistory.dbCreditentialsMap.get("dbPassword"));
        try {
            if (dbContext.getLastContext() == null
                    || dbContext.getLastContext().length() == 0
                    || dbContext.getLastContext().isEmpty()) {
                dbCreditentials.setVisible(true);
            } else {
                dbUrlTextFld.setText(null);
                dbUserNameFld.setText(null);
                dbPasswordFld.setText(null);
                dbUrlTextFld.setText(myHistory.dbCreditentialsMap.get("dbUrl"));
                dbUserNameFld.setText(myHistory.dbCreditentialsMap.get("dbUser"));
                dbPasswordFld.setText(myHistory.dbCreditentialsMap.get("dbPassword"));
                dbCreditentials.pack();
                dbCreditentials.setResizable(false);
                dbCreditentials.setLocationRelativeTo(this);
                dbCreditentials.setVisible(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(RemoteManagementWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void saveContextHistBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveContextHistBtnActionPerformed
        boolean success = true;
        String errorMessageText = null;
        myHistory = new SqlDaoCreditentialsFromHistory();
        if (dbUrlTextFld.getText().contains("HOSTNAME")
                || dbUrlTextFld.getText().contains("PORT")
                || dbUrlTextFld.getText().contains("DBNAME")) {
            errorMessageText = "URL must be correct!";
            success = false;
        } else if (dbUserNameFld.getText().isEmpty()) {
            errorMessageText = "Username cannot be empty!";
            success = false;
        } else if (dbPasswordFld.getText().isEmpty()) {
            errorMessageText = "Password cannot be empty!";
            success = false;
        }
        try {
            if (success) {
                contextHistory = new ContextHistory();
                contextHistory.setLastContext(dbUrlTextFld.getText());
                contextHistory.setUsername(dbUserNameFld.getText());
                contextHistory.setPassword(CryptUtil.encrypt(dbPasswordFld.getText().trim()));
                contextHistory.setUrl(dbUrlTextFld.getText());
                XML2Obj.xmlWriterRoot(contextHistory,
                        ".contextHistory");
                reloadBtn.setVisible(true);
                if (myHistory.dbCreditentialsMap.size() > 0) {
                    myHistory.dbCreditentialsMap.clear();
                }
                myHistory.dbCreditentialsMap.put("dbUrl", dbUrlTextFld.getText());
                myHistory.dbCreditentialsMap.put("dbUser", dbUserNameFld.getText());
                myHistory.dbCreditentialsMap.put("dbPassword", dbPasswordFld.getText());
                dbCreditentials.dispose();
            } else {
                JOptionPane.showMessageDialog(this, errorMessageText, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveContextHistBtnActionPerformed

    private void closeContextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeContextBtnActionPerformed
        // TODO add your handling code here:
        dbCreditentials.dispose();
    }//GEN-LAST:event_closeContextBtnActionPerformed

    private void dbUrlTextFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dbUrlTextFldKeyPressed
        // TODO add your handling code here:
        saveContextHistBtn.setEnabled(false);
    }//GEN-LAST:event_dbUrlTextFldKeyPressed

    private void dbUserNameFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dbUserNameFldKeyPressed
        // TODO add your handling code here:
        saveContextHistBtn.setEnabled(false);
    }//GEN-LAST:event_dbUserNameFldKeyPressed

    private void dbPasswordFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dbPasswordFldKeyPressed
        // TODO add your handling code here:
        saveContextHistBtn.setEnabled(false);
    }//GEN-LAST:event_dbPasswordFldKeyPressed

    private void dbPasswordFldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dbPasswordFldMouseEntered
        // TODO add your handling code here:
        dbPasswordFld.setToolTipText(dbPasswordFld.getText());
    }//GEN-LAST:event_dbPasswordFldMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoteManagementWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoteManagementWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoteManagementWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoteManagementWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    Thread.sleep(1000);
                } catch (Exception e) {
                }

                new RemoteManagementWindow().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agentNameLbl;
    private javax.swing.JList avaliableAgentsList;
    private javax.swing.JButton checkConnectionBtn;
    private javax.swing.JButton closeContextBtn;
    private javax.swing.JDialog creditentialsDialog;
    public javax.swing.JDialog dbCreditentials;
    private javax.swing.JPasswordField dbPasswordFld;
    private javax.swing.JTextField dbUrlTextFld;
    private javax.swing.JTextField dbUserNameFld;
    private javax.swing.JLabel directoryFl;
    private javax.swing.border.EtchedBorder etchedBorder1;
    private javax.swing.JLabel hostFl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton loginCancelBtn;
    private javax.swing.JButton loginOkBtn;
    private javax.swing.JPasswordField passwordFl;
    private javax.swing.JButton reloadBtn;
    private javax.swing.JButton saveContextHistBtn;
    public javax.swing.JButton startAgentBtn;
    public javax.swing.JButton stopAgentBtn;
    public javax.swing.JButton tailBtn;
    private javax.swing.JTextField userNameFl;
    // End of variables declaration//GEN-END:variables

}
